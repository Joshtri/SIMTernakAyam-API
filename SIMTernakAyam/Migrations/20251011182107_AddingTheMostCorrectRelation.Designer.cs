// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SIMTernakAyam.Data;

#nullable disable

namespace SIMTernakAyam.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251011182107_AddingTheMostCorrectRelation")]
    partial class AddingTheMostCorrectRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SIMTernakAyam.Models.Ayam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("JumlahMasuk")
                        .HasColumnType("integer");

                    b.Property<Guid>("KandangId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("KandangId1")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TanggalMasuk")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("KandangId");

                    b.HasIndex("KandangId1");

                    b.ToTable("Ayams");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Biaya", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BuktiUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JenisBiaya")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Jumlah")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid?>("OperasionalId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PetugasId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OperasionalId");

                    b.HasIndex("PetugasId");

                    b.ToTable("Biayas");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.JenisKegiatan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("BiayaDefault")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Deskripsi")
                        .HasColumnType("text");

                    b.Property<string>("NamaKegiatan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Satuan")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("JenisKegiatans");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Kandang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Kapasitas")
                        .HasColumnType("integer");

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaKandang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("petugasId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("petugasId");

                    b.ToTable("Kandangs");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Mortalitas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AyamId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("JumlahKematian")
                        .HasColumnType("integer");

                    b.Property<string>("PenyebabKematian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalKematian")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AyamId");

                    b.ToTable("Mortalitas");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Operasional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("JenisKegiatanId")
                        .HasColumnType("uuid");

                    b.Property<int>("Jumlah")
                        .HasColumnType("integer");

                    b.Property<Guid>("KandangId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PakanId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PetugasId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("VaksinId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("JenisKegiatanId");

                    b.HasIndex("KandangId");

                    b.HasIndex("PakanId");

                    b.HasIndex("PetugasId");

                    b.HasIndex("VaksinId");

                    b.ToTable("Operasionals");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Pakan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NamaPakan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Stok")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Pakans");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Panen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AyamId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("BeratRataRata")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("JumlahEkorPanen")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalPanen")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AyamId");

                    b.ToTable("Panens");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("NoWA")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Vaksin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NamaVaksin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Stok")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Vaksins");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Ayam", b =>
                {
                    b.HasOne("SIMTernakAyam.Models.Kandang", "Kandang")
                        .WithMany()
                        .HasForeignKey("KandangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIMTernakAyam.Models.Kandang", null)
                        .WithMany("Ayams")
                        .HasForeignKey("KandangId1");

                    b.Navigation("Kandang");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Biaya", b =>
                {
                    b.HasOne("SIMTernakAyam.Models.Operasional", "Operasional")
                        .WithMany()
                        .HasForeignKey("OperasionalId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SIMTernakAyam.Models.User", "Petugas")
                        .WithMany()
                        .HasForeignKey("PetugasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Operasional");

                    b.Navigation("Petugas");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Kandang", b =>
                {
                    b.HasOne("SIMTernakAyam.Models.User", "User")
                        .WithMany("Kandangs")
                        .HasForeignKey("petugasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Mortalitas", b =>
                {
                    b.HasOne("SIMTernakAyam.Models.Ayam", "Ayam")
                        .WithMany()
                        .HasForeignKey("AyamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ayam");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Operasional", b =>
                {
                    b.HasOne("SIMTernakAyam.Models.JenisKegiatan", "JenisKegiatan")
                        .WithMany()
                        .HasForeignKey("JenisKegiatanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIMTernakAyam.Models.Kandang", "Kandang")
                        .WithMany()
                        .HasForeignKey("KandangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIMTernakAyam.Models.Pakan", "Pakan")
                        .WithMany()
                        .HasForeignKey("PakanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SIMTernakAyam.Models.User", "Petugas")
                        .WithMany()
                        .HasForeignKey("PetugasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIMTernakAyam.Models.Vaksin", "Vaksin")
                        .WithMany()
                        .HasForeignKey("VaksinId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("JenisKegiatan");

                    b.Navigation("Kandang");

                    b.Navigation("Pakan");

                    b.Navigation("Petugas");

                    b.Navigation("Vaksin");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Panen", b =>
                {
                    b.HasOne("SIMTernakAyam.Models.Ayam", "Ayam")
                        .WithMany()
                        .HasForeignKey("AyamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ayam");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.Kandang", b =>
                {
                    b.Navigation("Ayams");
                });

            modelBuilder.Entity("SIMTernakAyam.Models.User", b =>
                {
                    b.Navigation("Kandangs");
                });
#pragma warning restore 612, 618
        }
    }
}
